# Mark J. Olah (mjo@cs.unm DOT edu)
# Copyright 2014-2017
# Licensed under the Apache License, Version 2.0
# https://www.apache.org/licenses/LICENSE-2.0
# See: LICENCE file
#
set(target @target@)
set(target_file_name $<TARGET_FILE_NAME:@target@>)
set(target_build_dir $<TARGET_FILE_DIR:@target@>)
set(install_prefix @CMAKE_INSTALL_PREFIX@)
set(mex_arch_dir @MEX_ARCH_DIR@)
set(project_name @PROJECT_NAME@)
#relative directory path from ${CMAKE_INSTALL_PREFIX} that target will be installed to
set(target_destination @FIXUP_TARGET_DESTINATION@)
if(NOT target_destination)
    #try to find installed file
    find_file(${target}_install_file ${target_file_name} PATHS ${install_prefix} PATH_SUFFIXES lib  lib/${project_name} ${mex_arch_dir} NO_DEFAULT_PATH)
    if(${${target}_install_file} STREQUAL "${target}_install_file-NOTFOUND")
        message(FATAL_ERROR "Could not find installed location for file:${target_file_name} under install dir: ${install_prefix}")
    endif()
    message(STATUS "GOT target_install_file:${${target}_install_file}")
    get_filename_component(target_install_dir ${${target}_install_file} DIRECTORY)
    file(RELATIVE_PATH target_destination ${install_prefix} "${target_install_dir}")
endif()
set(target_install_dir ${install_prefix}/${target_destination})
set(target_install_file ${target_install_dir}/${target_file_name})
set(lib_dest ${target_install_dir}/@FIXUP_COPY_DESTINATION@)
get_filename_component(lib_dest ${lib_dest} REALPATH)
set(rpath "@FIXUP_RPATH@")
set(search_dirs "@FIXUP_LIB_SEARCH_PATH@")
set(ignore_dirs "@FIXUP_LIB_IGNORE_PATH@")

#Platform specific dependency ignore list
set(ignore_names)
if(@TARGET_OS@ STREQUAL LINUX)
    list(APPEND ignore_dirs /lib /lib64)
    list(APPEND ignore_names libgcc_s)
endif()
message(STATUS "FIXUP TARGET: ${target_file_name}")
message(STATUS "  target_file_name=${target_file_name}")
message(STATUS "  target_build_dir=${target_build_dir}")
message(STATUS "  target_destination=${target_destination}")
message(STATUS "  target_install_dir=${target_install_dir}")
message(STATUS "  target_install_file=${target_install_file}")
message(STATUS "  lib_dest=${lib_dest}")
message(STATUS "  rpath=${rpath}")
message(STATUS "  search_dirs=${search_dirs}")
message(STATUS "  ignore_dirs=${ignore_dirs}")

if(@TARGET_OS@ STREQUAL LINUX)
    set(gp_tool "ldd")
    set(EXCLUDE_SYSTEM_LIBS 0)
    set(RECURSE 0)
elseif(@TARGET_OS@ STREQUAL WIN64)
    set(gp_tool "objdump")
    set(EXCLUDE_SYSTEM_LIBS 1)
    set(RECURSE 0)
    set(WIN32 true)
endif()
include(GetPrerequisites)
get_prerequisites(${target_install_file} deps ${EXCLUDE_SYSTEM_LIBS} ${RECURSE} "" "${search_dirs};${ignore_dirs}" "${rpath}")
message(STATUS "TARGET_OS= @TARGET_OS@")
message(STATUS "gp_too=${gp_tool}")
message(STATUS "deps=${deps}")

foreach(dep IN LISTS deps)
#     message(STATUS "Working on dep:" ${dep})
    get_filename_component(dep_dir ${dep} DIRECTORY)
    get_filename_component(dep_name ${dep} NAME)
    get_filename_component(dep_base_name ${dep} NAME_WE)
#     message(STATUS " dep_dir:" ${dep_dir})
#     message(STATUS " dep_name:" ${dep_name})
#     message(STATUS " dep_base_name:" ${dep_base_name})
    list(FIND ignore_dirs ${dep_dir} ignore_dir)
    list(FIND ignore_names ${dep_base_name} ignore_name)
#     message(STATUS " ignore_dir:" ${ignore_dir})
#     message(STATUS " ignore_name:" ${ignore_name})
#     message(STATUS " ignore dirs:=${ignore_dirs}")
    
    if(ignore_dir EQUAL -1 AND ignore_name EQUAL -1)
        set(dest_name ${lib_dest}/${dep_name})
        if(EXISTS ${dest_name})
            message(STATUS "  === Already Present: " ${dep_name})
        else()
            get_filename_component(dep ${dep} REALPATH)
            execute_process(COMMAND ${CMAKE_COMMAND} -E copy ${dep} ${dest_name})
            message(STATUS "  +++ Copying: " ${dep} --> ${dest_name})
        endif()
    else()
        message(STATUS "  --- Ignoring: " ${dep_name})
    endif()
endforeach()

